---
# tasks file for devtool-RHEL
- name: Create terraform user
  user:
   name: "{{terraform_user}}"
   password: "{{terraform_user_password}}"
  become: yes

- name: Create Terraform directory
  file:
   path: "{{terraform_dir}}"
   state: directory
   owner: "{{terraform_user}}"
   group: "{{terraform_user}}"
  register: terraform_directory
  become: yes

- name: Check terraform version
  shell: "terraform version 2>&1 | head -n 1 | grep -q {{terraform_version}}"
  failed_when: false
  changed_when: false
  register: terraform_versions_match

- include: download.yml
  when: terraform_versions_match.rc != 0

- name: Install unzip to unarchive terraform
  package:
   name: unzip
   state: present
  become: yes

- name: Unarchive Terraform archive
  unarchive:
   src: /tmp/terraform-{{terraform_version}}.zip
   dest: "{{terraform_dir}}"
   copy: no
  when: terraform_versions_match.rc != 0 or terraform_directory is changed
  become: yes

- name: Make terraform_user terraform directory owner
  file:
   path: "{{terraform_dir}}"
   state: directory
   owner: "{{terraform_user}}"
   group: "{{terraform_user}}"
   recurse: yes
  become: yes
  
- name: Adding terraform command to user path
  file:
   src: "{{terraform_dir}}/terraform"
   dest: /usr/bin/terraform
   state: link
  become: yes

- name: install the latest version of Ansible
  yum:
   name: epel-release,ansible
   state: latest
  become: yes

- name: Downloading the Kubectl 1.17 version
  get_url:
   url: https://storage.googleapis.com/kubernetes-release/release/v1.17.0/bin/linux/amd64/kubectl
   dest: "/home/{{terraform_user}}"
   mode: '755'
   owner: "{{terraform_user}}"
  become: yes

- name: Move the Kubectl binary in to your PATH.
  command: mv "/home/{{terraform_user}}/kubectl" /usr/local/bin/kubectl
  become: yes

- name: Need to install the Pre requisites for Docker
  yum:
   name: yum-utils,device-mapper-persistent-data,lvm2
   state: latest
  become: yes

- name: Docker stable repository is getting setup.
  command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
  become: yes

- name: Downloading the Conatiner SELinux.
  get_url:
   url: http://mirror.centos.org/centos/7/extras/x86_64/Packages/container-selinux-2.107-1.el7_6.noarch.rpm
   dest: "/home/{{terraform_user}}"
   mode: '755'
   owner: "{{terraform_user}}"
  become: yes

- name: check if package installed
  command: rpm -q --qf "%{VERSION}\n" container-selinux
  args:
    warn: false
  register: package_installed

- name: Download Container SElinux for Docker.
  command: yum install -y "/home/{{terraform_user}}/container-selinux-2.107-1.el7_6.noarch.rpm"
  become: yes
  when: package_installed.rc != 0

- name: Installing DOCKER ENGINE - COMMUNITY
  yum:
   name: docker-ce,docker-ce-cli,containerd.io
   state: latest
  become: yes

- name: Installing GIT now on this server
  yum:
   name: git
   state: latest
  become: yes

- name: Downloading and extracting the Packer fron HASHICORP
  unarchive:
   src: https://releases.hashicorp.com/packer/1.5.4/packer_1.5.4_linux_amd64.zip
   dest: "{{terraform_dir}}"
   remote_src: yes
   owner: "{{terraform_user}}"
   mode: '755'
  become: yes

- name: Downloading and extracting the Helm fron HELM
  unarchive:
   src: https://get.helm.sh/helm-v3.1.0-linux-amd64.tar.gz 
   dest: "{{terraform_dir}}"
   remote_src: yes
   owner: "{{terraform_user}}"
   mode: '755'
  become: yes

- name: Moving Helm to user bin dir
  command: mv "{{terraform_dir}}/linux-amd64/helm" /usr/local/bin/helm
  become: yes

- name: Install Python 3 and PIP3
  yum:
   name: python3,python3-pip
   state: latest
  become: yes

- name: Install PIP3 module pre-commit.
  command: pip3 install pre-commit
  become: yes

- name: Install AWS CLI module.
  command: pip3 install awscli
  become: yes

- name: Downloading and extracting the GoLang fron Google
  unarchive:
   src: https://dl.google.com/go/go1.13.8.linux-amd64.tar.gz
   dest: /usr/local/
   remote_src: yes
   owner: "{{terraform_user}}"
   mode: '755'
  become: yes

- name: Adding GO LANG Path in the Profile file to set the Go path
  lineinfile:
   path: /home/terraform/.bashrc
   line: export PATH=$PATH:/usr/local/go/bin
  become: yes

- name: Downloading and extracting the GoLang fron Google
  unarchive:
   src: https://releases.hashicorp.com/vagrant/2.2.7/vagrant_2.2.7_linux_amd64.zip
   dest: "{{terraform_dir}}"
   remote_src: yes
   owner: "{{terraform_user}}"
   mode: '755'
  become: yes

- name: Install Boto3 Library.
  command: pip3 install boto3
  become: yes


- name: Downloading the AWS IAM Authenticator
  get_url:
   url: https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/linux/amd64/aws-iam-authenticator
   dest: "/home/{{terraform_user}}"
   mode: '755'
   owner: "{{terraform_user}}"
  become: yes      
            
- name: Making Home dir for IAM Authenticator
  command: mkdir -p "/home/{{terraform_user}}/bin"
  become: yes
    
- name: Moving file to home dir
  command: cp "/home/{{terraform_user}}/aws-iam-authenticator" "/home/{{terraform_user}}/bin"
  become: yes

- name: Adding IAM Authenticator Path in the Profile file to set the AWS Authenticator
  lineinfile:
   path: /home/terraform/.bashrc
   line: export PATH=$PATH:/home/terraform/bin
  become: yes
  
- name: Import Keys for the 64bit VS Code
  command: rpm --import https://packages.microsoft.com/keys/microsoft.asc
  become: yes 
     
- name: Import Keys for the 64bit VS Code
  command: sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
  become: yes
    
- name: Install 64bit VS Code
  yum:
   name: code
   state: latest
  become: yes

- name: Downloading the Virtual Box 6.1.2.
  get_url:
   url: https://download.virtualbox.org/virtualbox/6.1.2/VirtualBox-6.1-6.1.2_135662_el7-1.x86_64.rpm
   dest: "/home/{{terraform_user}}"
   mode: '755'
   owner: "{{terraform_user}}"
  become: yes
  
- name: check if package installed
  command: rpm -q --qf "%{VERSION}\n" virtualbox
  args:
    warn: false
  register: package_installed
 
- name: Installing Virtual Box 6.1.2.
  command: yum install -y "/home/{{terraform_user}}/VirtualBox-6.1-6.1.2_135662_el7-1.x86_64.rpm"
  args:
     warn: false
  become: yes
  when: package_installed.rc != 0
